// Global variables
const root = document.documentElement;
const ico = document.querySelector(".ico");
const base = document.querySelector(".base");
let darkModeSelected = true;
let currentTheme = 'system';
let themePrimaryColour;
let themeSecondaryColour;

const options = [
  {
    name: 'system',
    svg: '<svg width="40" height="46" viewBox="0 0 40 46" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M20 0C8.95431 0 0 8.95431 0 20V28.5714L8.57143 37.1429L5.71429 42.8571V45.7143H34.2857V42.8571L31.4286 37.1429L40 28.5714V20C40 8.95431 31.0457 0 20 0ZM15.7143 21.4286C15.7143 23.7955 13.7955 25.7143 11.4286 25.7143C9.06163 25.7143 7.14286 23.7955 7.14286 21.4286C7.14286 19.0616 9.06163 17.1429 11.4286 17.1429C13.7955 17.1429 15.7143 19.0616 15.7143 21.4286ZM28.5714 25.7143C30.9383 25.7143 32.8571 23.7955 32.8571 21.4286C32.8571 19.0616 30.9383 17.1429 28.5714 17.1429C26.2046 17.1429 24.2857 19.0616 24.2857 21.4286C24.2857 23.7955 26.2046 25.7143 28.5714 25.7143Z" fill="var(--light-colour)"/></svg>',
    func: () => changeTheme("system")
  },
  {
    name: 'leaf',
    svg: '<svg width="36" height="44" viewBox="0 0 36 44" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M0.603868 40.1657C-0.608967 34.7139 0.0190516 28.8694 2.36235 23.7997C4.70566 18.7301 8.75059 14.4649 13.689 11.8565C17.4771 9.85552 21.693 8.83534 25.6968 7.31098C29.7006 5.78672 33.6755 3.5987 36 4.73035e-05C35.1458 9.87098 34.1682 22.0593 28.8032 30.389C23.4383 38.7186 8.38393 37.257 3.3201 43.1675C8.79997 30.7323 18.5405 19.9152 28.1164 13.7338C17.0417 18.3698 6.73959 29.187 0.603868 40.1657Z" fill="var(--light-colour)"/></svg>',
    func: () => changeTheme("leaf")
  },
  {
    name: 'snow',
    svg: '<svg width="45" height="47" viewBox="0 0 45 47" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M22.5097 35.4074L15.5653 42.3519M22.5097 35.4074L29.4541 42.3519M22.5097 35.4074V23.8333M22.5097 35.4074V44.6667M22.5097 23.8333V12.2593M22.5097 23.8333L12.4863 18.0462M22.5097 23.8333L32.5331 29.6201M22.5097 23.8333L12.4863 29.6201M22.5097 23.8333L32.5331 18.0462M22.5097 12.2593L15.5653 5.31481M22.5097 12.2593L29.4541 5.31481M22.5097 12.2593V3M12.4863 18.0462L3 20.588M12.4863 18.0462L9.94444 8.55988M12.4863 18.0462L4.46752 13.4167M32.5331 29.6201L35.075 39.1065M32.5331 29.6201L42.0194 27.0785M32.5331 29.6201L40.5518 34.25M12.4863 29.6201L9.94444 39.1065M12.4863 29.6201L3 27.0785M12.4863 29.6201L4.46766 34.25M32.5331 18.0462L42.0194 20.588M32.5331 18.0462L35.075 8.55988M32.5331 18.0462L40.5521 13.4167" stroke="var(--light-colour)" stroke-width="4.16667" stroke-linecap="round" stroke-linejoin="round"/></svg>',
    func: () => changeTheme("snow")
  },
  {
    name: 'dune',
    svg: '<svg width="50" height="22" viewBox="0 0 50 22" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M20.8333 1.30871C15.9459 7.37631 4.71597 19.4468 0 21.6667H50C46.8411 18.749 48.3333 19.527 35.8333 7.06219C30 2.26758 23.761 -2.32585 20.8333 1.30871Z" fill="var(--light-colour)"/></svg>',
    func: () => changeTheme("dune")
  },
  {
    name: 'drago',
    svg: '<svg width="50" height="34" viewBox="0 0 50 34" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M48.9434 16.0586C44.623 16.7969 41.334 20.5566 41.334 25.0879C41.334 25.6016 41.3789 26.1055 41.4609 26.5977C41.1289 26.5742 40.793 26.5605 40.4551 26.5605C35.541 26.5605 32.2051 29.2227 30.8594 33.2031H19.1406C17.8438 29.2227 14.459 26.5605 9.54492 26.5605C9.20703 26.5605 8.87109 26.5742 8.53906 26.5977C8.62109 26.1055 8.66602 25.6016 8.66602 25.0879C8.66602 20.5566 5.37695 16.7969 1.05664 16.0586C3.22656 14.2402 4.60742 11.5117 4.60742 8.45898C4.60742 4.9375 2.76953 1.84375 0 0.0898438C0.632813 0.0292969 1.27539 0 1.92383 0C7.98828 0 13.4375 2.62891 17.1934 6.8125C15.9629 8.78711 15.2344 11.2422 15.2344 13.9023C15.2344 17.9531 16.8336 21.6396 19.498 23.6523C20.3789 24.3178 21.284 24.116 21.8219 23.593C22.3742 23.0559 22.3736 22.0738 21.7559 21.4297C19.8193 19.4102 18.9277 18.3125 18.9902 15.4687C19.0117 14.4375 19.4082 13.459 19.9766 12.627C19.6699 12.5938 19.3496 12.4766 19.0566 12.2012C18.1289 11.3262 18.291 9.88477 18.3008 9.8125C19.1445 10.8438 20.5273 11.2246 21.7578 10.8223C21.7871 10.8008 21.8164 10.7813 21.8457 10.7598C19.9062 9.3457 20.375 7.11523 20.3926 7.03516C21.0723 8.71875 22.7129 9.77539 24.4727 9.76367C26.3887 9.5332 27.8574 10.3164 27.8574 10.3164C27.8574 10.3164 28.2715 9.49219 28.2715 8.25586C28.2715 8.25586 29.2969 9.25 30.0449 10.9434C30.5605 12.1094 30.6406 13.2656 31.3027 14.0449L32.2578 14.9609C32.5059 15.1973 32.5098 15.5937 32.2637 15.834L31.0742 17.0098L31.1934 15.998L28.8086 14.8047C29.0723 15.4609 29.8047 17.0684 29.8047 17.0684L30.543 17.3867L29.6172 17.7324C29.2773 17.8574 28.8965 17.7598 28.6602 17.4863C28.1074 16.8418 26.3633 14.793 26.2715 14.6816C25.6602 13.9336 24.3008 13.7969 23.6914 14.9961C23.2617 15.8437 23.8223 16.6074 24.0566 16.877C25.1973 18.1895 29.2344 19.8887 31.459 22.7715C33.498 20.6094 34.7852 17.4375 34.7852 13.9023C34.7852 11.2344 34.0527 8.77539 32.8184 6.79883C36.5742 2.625 42.0176 0 48.0762 0C48.7246 0 49.3672 0.0292969 50 0.0898438C47.2305 1.84375 45.3926 4.9375 45.3926 8.45898C45.3926 11.5117 46.7734 14.2402 48.9434 16.0586Z" fill="var(--light-colour)"/></svg>',
    func: () => changeTheme("drago")
  },
  {
    name: 'batman',
    svg: '<svg width="50" height="24" viewBox="0 0 50 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M34.5267 1.26698L34.5157 1.25034L34.5046 1.23369L34.488 1.22259L34.4713 1.2115L34.4602 1.19485L34.4491 1.1782L34.4325 1.16711L34.4158 1.15601L34.4047 1.13937L34.3936 1.12272L34.377 1.11162L34.3603 1.10053L34.3492 1.08388L34.3382 1.06723L34.3215 1.05614L34.3048 1.04504L34.2938 1.0284L34.2827 1.01175L34.266 1.00065L34.2493 0.989556L34.2383 0.97291L34.2272 0.956264L34.2105 0.945167L34.1938 0.934071L34.1828 0.917425H34.4047L34.5157 0.945167L34.6267 0.97291L36.5132 1.50002C37.7708 1.85141 38.9545 2.24907 40.0642 2.69295C41.1739 3.13683 42.132 3.57516 42.9383 4.00794C43.741 4.44439 44.4697 4.88827 45.1244 5.33959C45.7828 5.79456 46.3746 6.25692 46.8999 6.72671C47.4289 7.20017 47.9061 7.71435 48.3315 8.2692C48.7568 8.82405 49.0898 9.34189 49.3302 9.82278C49.5706 10.3037 49.7464 10.7845 49.8573 11.2654C49.9683 11.7463 50.0145 12.2271 49.996 12.708C49.9775 13.1888 49.8943 13.6882 49.7464 14.2061C49.5984 14.724 49.3949 15.2418 49.136 15.7597C48.8771 16.2776 48.5534 16.7954 48.165 17.3133C47.7766 17.8312 47.366 18.3083 46.9333 18.7448C46.4968 19.1776 45.9179 19.6529 45.1966 20.1708C44.4753 20.6886 43.717 21.1602 42.9217 21.5856C42.1264 22.011 41.2386 22.4086 40.2584 22.7786C39.2782 23.1485 38.7048 23.3611 38.5384 23.4166C38.3719 23.4721 38.2517 23.5091 38.1777 23.5276L38.0667 23.5553L37.9835 23.5831L37.9003 23.6108L37.8171 23.6386L37.7338 23.6663L37.6784 23.683L37.6229 23.6941V23.5831L37.6784 23.572L37.7338 23.5553L37.7449 23.5387L37.7616 23.5276L37.7782 23.5165L37.7893 23.4999L37.8004 23.4832L37.8171 23.4721L37.8337 23.461L37.8448 23.4444L37.8558 23.4277L37.8726 23.4166L37.8892 23.4055L37.9003 23.3889L37.9113 23.3722L37.928 23.3611L37.9447 23.35C37.9521 23.3389 37.978 23.3094 38.0223 23.2613C38.0704 23.2169 38.3293 22.9135 38.7991 22.3513C39.2725 21.7854 39.6609 21.212 39.9643 20.6313C40.2713 20.0469 40.4804 19.4957 40.5913 18.9778C40.7023 18.4599 40.7392 18.016 40.7023 17.6462C40.6653 17.2763 40.5821 16.9526 40.4526 16.6752C40.3231 16.3978 40.1603 16.1703 39.9643 15.9927C39.7719 15.8188 39.5371 15.6765 39.2597 15.5655C38.9823 15.4545 38.6216 15.399 38.1777 15.399C37.7338 15.399 37.2345 15.4915 36.6796 15.6765C36.1248 15.8614 35.5607 16.1295 34.9873 16.481C34.4139 16.8324 33.8868 17.2115 33.406 17.6184L32.6847 18.2288L32.6736 18.2454L32.657 18.2565L32.6403 18.2676L32.6292 18.2843L32.546 18.3009L32.4628 18.312L32.4517 18.2565C32.4406 18.2196 32.3055 18.016 32.0466 17.6462C31.7877 17.2763 31.5343 17.0026 31.2865 16.825C31.035 16.6511 30.7889 16.555 30.5485 16.5365C30.308 16.5179 30.0399 16.5828 29.744 16.7307C29.448 16.8786 29.1891 17.0636 28.9672 17.2855C28.7453 17.5075 28.4308 17.9051 28.0239 18.4785C27.617 19.0518 27.04 20.0284 26.2928 21.4081L25.1665 23.4721L25.1387 23.5276L25.111 23.5831L25.0832 23.6386L25.0555 23.6941L25.0278 23.7495L25 23.805L24.9723 23.7495L24.9445 23.6941L24.9168 23.6386L24.889 23.5831L24.8723 23.572L24.8613 23.5553L24.8502 23.5387L24.8336 23.5276L24.8058 23.4721C24.7873 23.4351 24.5099 22.908 23.9735 21.8908C23.4372 20.8736 22.9471 20.0043 22.5032 19.283C22.0593 18.5617 21.658 18.0013 21.2992 17.6018C20.9367 17.206 20.6259 16.9341 20.367 16.7862C20.1081 16.6382 19.8676 16.555 19.6457 16.5365C19.4238 16.5179 19.2573 16.5273 19.1463 16.5642C19.0354 16.6012 18.8596 16.7121 18.6192 16.8971C18.3788 17.0821 18.1383 17.3651 17.8979 17.7461L17.5373 18.312L17.454 18.3009L17.3708 18.2843L17.3597 18.2676L17.3431 18.2565L17.3264 18.2454L17.3153 18.2288L16.594 17.6184C16.1131 17.2115 15.586 16.8324 15.0127 16.481C14.4393 16.1295 13.9215 15.8707 13.4591 15.7042C12.9967 15.5377 12.5713 15.436 12.183 15.399C11.7946 15.3621 11.4339 15.3805 11.101 15.4545C10.7681 15.5285 10.4999 15.6265 10.2965 15.7486C10.093 15.867 9.99129 15.9447 9.99129 15.9816C9.99129 16.0186 9.97276 16.0371 9.93581 16.0371C9.8988 16.0371 9.80264 16.1758 9.64728 16.4532C9.48821 16.7307 9.38096 16.9989 9.32547 17.2578C9.26999 17.5167 9.26072 17.8681 9.29773 18.312C9.33468 18.7559 9.44565 19.2368 9.63064 19.7546C9.81557 20.2725 10.0837 20.7996 10.4352 21.3359C10.7866 21.8723 11.1417 22.3402 11.5005 22.7397C11.863 23.1355 12.0479 23.3389 12.0553 23.35L12.072 23.3611L12.0886 23.3722L12.0997 23.3889L12.1108 23.4055L12.1275 23.4166L12.1441 23.4277L12.1552 23.4444L12.1663 23.461L12.183 23.4721L12.1996 23.4832L12.2107 23.4999L12.2218 23.5165L12.2384 23.5276L12.2551 23.5387L12.2662 23.5553L12.3217 23.572L12.3772 23.5831V23.6941L12.3217 23.683L12.2662 23.6663L12.183 23.6386L12.0997 23.6108L12.0165 23.5831L11.9333 23.5553L11.85 23.5276C11.7946 23.5091 11.5818 23.4444 11.212 23.3334C10.842 23.2224 10.1855 22.9727 9.24224 22.5844C8.299 22.196 7.45745 21.7983 6.71767 21.3914C5.97783 20.9846 5.3028 20.5591 4.69247 20.1153C4.08213 19.6714 3.55868 19.2331 3.12224 18.8003C2.68824 18.3625 2.28063 17.8993 1.90156 17.4131C1.526 16.924 1.19193 16.4043 0.902833 15.8596C0.617973 15.3121 0.401581 14.7702 0.253658 14.2338C0.105679 13.6975 0.0224514 13.1796 0.00397487 12.6803C-0.0145571 12.1809 0.0317174 11.7 0.142688 11.2377C0.253658 10.7753 0.43859 10.2851 0.697538 9.7673C0.956432 9.24945 1.30227 8.71674 1.73511 8.16933C2.17156 7.62557 2.67647 7.10401 3.24985 6.60465C3.82318 6.10528 4.40577 5.65213 4.99763 5.24526C5.58944 4.83839 6.30153 4.41299 7.13381 3.96911C7.96609 3.52522 8.94629 3.08134 10.0745 2.63746C11.2027 2.19358 12.3679 1.80519 13.5701 1.47228L15.3733 0.97291L15.4843 0.945167L15.5953 0.917425H15.8172L15.8061 0.934071L15.7895 0.945167L15.7728 0.956264L15.7617 0.97291L15.7506 0.989556L15.734 1.00065L15.7173 1.01175L15.7063 1.0284L15.6952 1.04504L15.6785 1.05614L15.6618 1.06723L15.6508 1.08388L15.6397 1.10053L15.623 1.11162L15.6063 1.12272L15.5953 1.13937L15.5842 1.15601L15.5675 1.16711L15.5508 1.1782L15.5398 1.19485L15.5287 1.2115L15.5121 1.22259L15.4954 1.23369L15.4843 1.25034L14.9184 1.9328C14.5374 2.38412 14.2451 2.81318 14.0417 3.22006C13.8382 3.62693 13.6995 3.97837 13.6256 4.27427C13.5515 4.57018 13.5238 4.87534 13.5423 5.18978C13.5608 5.50421 13.6384 5.81304 13.7753 6.11638C13.9159 6.42338 14.0694 6.67861 14.2359 6.88207C14.4024 7.08554 14.6705 7.30748 15.0404 7.54789C15.4103 7.78831 15.845 7.99177 16.3443 8.15823C16.8437 8.32468 17.4263 8.40791 18.0921 8.40791C18.7579 8.40791 19.2203 8.34316 19.4792 8.21371C19.7381 8.08427 19.9749 7.93263 20.1894 7.75874C20.4003 7.58118 20.6352 7.29821 20.8941 6.90981C21.153 6.52142 21.3749 6.0868 21.5599 5.60592C21.7449 5.12503 21.8836 4.18178 21.9761 2.77618C22.0685 1.37057 22.1462 0.504949 22.2091 0.179473C22.2756 -0.142341 22.4532 -0.0313704 22.7418 0.512383C23.0266 1.0598 23.2005 1.43527 23.2633 1.63873C23.3299 1.84219 23.5389 1.91061 23.8903 1.84403C24.2417 1.78111 24.6763 1.75891 25.1942 1.77744C25.712 1.79592 26.082 1.82927 26.3039 1.87732C26.5258 1.92171 26.7256 1.72196 26.9031 1.27808C27.077 0.834197 27.2564 0.455068 27.4414 0.140634C27.6263 -0.1738 27.7743 0.186853 27.8852 1.22259C27.9962 2.25833 28.0702 3.12756 28.1072 3.83039C28.1441 4.53322 28.2551 5.12503 28.4401 5.60592C28.625 6.0868 28.834 6.49734 29.0671 6.83768C29.2964 7.18169 29.5128 7.4554 29.7162 7.65886C29.9197 7.86233 30.1693 8.03799 30.4653 8.18597C30.7612 8.33395 31.2421 8.40791 31.9079 8.40791C32.5737 8.40791 33.1563 8.32468 33.6557 8.15823C34.155 7.99177 34.5619 7.80684 34.8764 7.60338C35.1907 7.39991 35.4626 7.17431 35.6919 6.92646C35.925 6.67495 36.1062 6.39197 36.2357 6.07754C36.3652 5.7631 36.4299 5.41172 36.4299 5.02332C36.4299 4.63493 36.3652 4.2558 36.2357 3.88588C36.1062 3.51596 35.912 3.12756 35.6531 2.72069C35.3942 2.31382 35.1445 1.97164 34.9041 1.69422C34.6636 1.41679 34.5379 1.27442 34.5267 1.26698Z" fill="var(--light-colour)"/></svg>',
    func: () => changeTheme('batman')
  },
  {
    name: 'bladerunner',
    svg: '<svg width="50" height="42" viewBox="0 0 50 42" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M8.17902 41.8734C8.35373 41.7869 8.43209 41.6643 8.43209 41.4901C8.43209 41.3857 8.32771 41.2543 8.10066 41.0796C7.83028 40.9752 7.49816 40.8092 7.10609 40.5735C7.10609 39.3264 7.15856 38.532 7.26294 38.1913C7.55118 38.2442 7.96928 38.2615 8.51059 38.2442C8.54576 38.1394 8.60626 38.0171 8.6939 37.8602C8.6939 37.8602 8.73709 37.869 8.81614 37.869C8.90322 37.8781 8.95624 37.8781 8.97299 37.8602C9.11351 37.6072 9.331 37.2492 9.63654 36.7868C9.97725 36.3941 10.3076 36.001 10.631 35.6089C11.0236 35.2157 11.4693 34.9546 11.9657 34.8151C12.0787 34.7805 12.7515 34.9984 13.9817 35.4602C14.104 35.6089 14.2175 35.6874 14.3392 35.6874C14.5576 35.6874 14.9411 35.3391 15.4912 34.6403C16.2591 33.6724 16.9048 32.9385 17.4374 32.442C18.6936 31.2988 20.2111 29.7803 21.9822 27.887C22.3229 27.5116 22.6804 27.119 23.0557 26.6918C23.431 26.1067 23.6668 25.8185 23.7717 25.8185C23.8242 25.8185 23.9637 25.9153 24.1811 26.098C24.4866 26.3592 24.8095 26.5783 25.1502 26.7703C25.1502 26.8135 25.2897 26.9179 25.5774 27.0753C25.8571 27.2234 25.9965 27.4067 25.9965 27.6073C25.5342 27.7815 24.7836 28.2623 23.7453 29.0648C23.1698 29.7105 22.6891 30.3038 22.3143 30.8272C22.2797 30.9673 22.1575 31.1679 21.9308 31.447C21.8346 31.4995 21.6778 31.5611 21.468 31.6476C21.1629 31.805 20.9271 32.0576 20.7525 32.415C20.8049 32.7211 20.7698 33.1396 20.6567 33.6724C20.1943 34.2304 20.0192 34.7713 20.1419 35.2775C20.4301 35.4347 20.8482 35.6089 21.3982 35.8182C21.5291 35.7836 21.7464 35.7836 22.0352 35.8182C23.0389 36.6651 24.3649 37.3632 25.9965 37.9122C26.0836 37.9122 26.214 37.8949 26.407 37.8602C26.407 37.8078 26.4157 37.7034 26.4416 37.5374C26.4682 37.38 26.4855 37.2843 26.4855 37.2492C26.1967 37.1269 25.8835 36.8923 25.5601 36.5343C25.5255 36.5164 25.4644 36.4466 25.3595 36.3244C25.2546 36.2108 25.1848 36.1498 25.1502 36.1498C24.8792 35.6355 24.7402 35.1027 24.7402 34.5365C25.115 34.4662 25.4903 34.4133 25.8657 34.3608C26.1799 34.1694 26.3712 33.6454 26.4589 32.773C27.1224 32.1446 28.0472 31.3946 29.2424 30.5217C29.6523 30.1469 30.072 29.7451 30.4992 29.3265C31.2844 28.5764 31.6684 27.8788 31.6684 27.2498C31.6684 26.9443 31.3455 26.2467 30.6998 25.1559C30.1937 24.5973 28.9114 23.254 26.8688 21.1422C26.9213 20.7668 27.1565 20.1823 27.5848 19.3792C28.0904 18.4717 28.3783 17.9137 28.4485 17.6958C28.6756 16.9889 29.138 16.0296 29.853 14.7982C29.9752 14.686 30.0806 14.6237 30.1676 14.6237C30.0623 14.6237 30.464 14.8508 31.3628 15.3132C32.611 16.1858 33.8845 16.613 35.202 16.613C35.9699 16.613 36.747 16.4736 37.5495 16.1858C37.8897 16.0637 38.2033 16.0203 38.5008 16.0549C39.1281 16.1599 39.477 16.2036 39.5476 16.1858C39.5988 16.1858 39.722 16.1161 39.9144 15.9766C40.1152 15.8448 40.237 15.777 40.2882 15.777C40.507 15.6703 40.7866 15.5222 41.1258 15.3395C41.231 14.6237 41.4151 14.2222 41.6671 14.135C41.7031 14.117 42.2527 14.135 43.3257 14.1876C43.806 14.1004 44.1023 14.0478 44.2242 14.0132C44.7032 13.8221 44.9925 13.5162 45.0963 13.0884C45.2971 13.0538 45.5158 12.9319 45.7595 12.7035C45.7595 12.5734 45.7775 12.4073 45.8121 12.2245C45.873 12.2079 45.9865 12.1816 46.143 12.1456C46.2745 11.9711 46.3451 11.7621 46.3451 11.5088C46.5542 11.4215 46.7203 11.4132 46.8587 11.4825C46.9902 11.5448 47.0165 11.6652 46.9293 11.8396C46.9293 11.9878 46.8061 12.0667 46.5542 12.0667C46.4489 12.0847 46.3091 12.0944 46.143 12.0944C46.0045 12.0944 45.9436 12.111 45.9616 12.1456C46.1956 12.1982 46.3797 12.2079 46.5015 12.1733C46.7895 12.1027 46.9556 11.9878 47.0069 11.8396C47.0069 11.7178 47.0512 11.5794 47.1384 11.4312C47.155 11.4312 47.3294 11.4132 47.67 11.3772C48.5602 11.326 49.1707 11.2997 49.5113 11.2997L49.5902 10.7681C49.6594 10.6449 49.7217 10.584 49.7743 10.584H49.9737L50 10.026H49.7992L49.7217 9.58856C49.0752 9.57195 48.4217 9.56363 47.7752 9.56363C47.1301 9.56363 46.3451 9.57195 45.4286 9.58856C45.131 9.64117 44.7032 9.781 44.1189 10.026C44.1882 10.2268 44.2242 10.523 44.2242 10.9162C44.1023 10.9162 43.9625 10.9328 43.7881 10.9688C43.8227 11.0547 43.8227 11.1599 43.7881 11.2997C43.2647 11.3177 42.9062 11.3869 42.7151 11.5088C42.4618 11.7441 42.2001 11.9795 41.9468 12.2245C41.7114 12.4432 41.3971 12.3034 41.004 11.8147C40.5416 12.0501 39.6611 12.3809 38.3694 12.8087C37.6015 12.8087 36.8069 12.8184 35.9958 12.835C34.8358 12.4432 34.2507 12.1982 34.2507 12.0944C33.4655 11.2388 32.9944 10.7072 32.8203 10.4787C32.5844 9.93883 32.3579 9.3892 32.1308 8.84789C31.9123 8.4201 31.2579 8.05461 30.1676 7.74865C30.0623 7.73065 29.9936 7.63514 29.9579 7.46901C29.9233 7.31257 29.9319 7.19904 29.9838 7.13674C30.106 6.9983 30.2807 6.92908 30.5251 6.92908C30.6214 6.92908 30.9172 6.9803 31.3888 7.08552C31.7111 7.14643 31.9214 7.12843 32.008 7.0066C32.0172 6.88477 32.0697 6.72694 32.1562 6.51789C32.1562 6.46528 32.1827 6.41269 32.2351 6.34347C32.2524 6.34347 32.2524 6.30054 32.2351 6.21194C32.2703 6.19532 32.3049 6.16903 32.3395 6.13442C32.3395 6.15241 32.3579 6.09011 32.4006 5.94198C32.445 5.80215 32.5147 5.58479 32.619 5.29683C32.619 5.27883 32.6715 5.27884 32.7679 5.30515C32.8723 5.33145 32.9506 5.33144 33.0031 5.29683C33.0902 5.20961 33.1075 5.11409 33.082 5.00888C32.9944 4.77352 32.8987 4.40664 32.7932 3.90824C32.7932 3.84871 32.8111 3.76012 32.8457 3.65628C32.8808 3.55107 32.8987 3.48184 32.8987 3.42924C32.8987 3.32402 32.8808 3.15927 32.8457 2.94053C32.8111 2.72317 32.7932 2.57365 32.7932 2.50443C32.7932 2.28569 32.8635 2.12095 33.0031 2.02404C33.1345 1.92021 33.1864 1.81499 33.1512 1.70977C32.9679 1.32628 32.6629 1.01202 32.2351 0.794658C32.1827 0.707439 32.0172 0.584225 31.7469 0.409787C31.4067 0.340565 30.9259 0.209049 30.3159 0C29.1029 0 28.2651 0.209051 27.7849 0.628533C27.3053 1.04802 27.0262 1.8676 26.9391 3.09697C26.9127 3.76011 26.5552 3.88332 25.8917 3.45553C25.4557 3.17588 25.1064 3.04575 24.8446 3.04575C24.3212 3.04575 23.8934 3.65629 23.5711 4.88704C23.3785 4.90366 23.0557 4.94796 22.5933 5.00888C22.2185 5.06148 21.6426 5.34943 20.8573 5.88105C19.9759 6.47359 18.7455 7.14643 17.1752 7.88018C16.7035 8.04493 16.0141 8.30657 15.1071 8.66514C14.6274 8.9088 14.1905 9.27568 13.7811 9.76438C13.4837 10.1396 13.1873 10.5134 12.8823 10.8899C12.5243 11.2471 12.036 11.6929 11.425 12.2245C11.3027 12.338 11.0761 12.5208 10.7354 12.7561C10.5353 12.7907 10.2211 12.8613 9.81985 12.9666C9.78413 13.0095 9.76738 13.2545 9.76738 13.6823C9.64458 13.7432 9.50558 13.8831 9.35744 14.0824C9.14756 14.3621 9.0519 14.5282 9.0519 14.5974C9.11351 14.668 9.21734 14.7635 9.35744 14.8771C9.35744 14.9463 9.3915 15.0086 9.47041 15.0598C9.54891 15.1124 9.58408 15.1913 9.58408 15.3132C9.07779 15.5139 8.60625 15.9071 8.17902 16.4913C7.75123 17.0674 7.54149 17.573 7.54149 18.0008C7.54149 18.2014 7.6031 18.3679 7.71717 18.481C8.48456 18.5156 9.05191 18.3149 9.41795 17.8785C9.78413 17.4513 10.1427 17.2328 10.4823 17.2328C10.4823 17.434 10.5612 17.6958 10.7354 18.0266C10.9101 17.9396 11.0063 17.7914 11.0409 17.5908C11.0939 17.2328 11.1371 16.8754 11.1717 16.5173C11.3552 16.4833 11.5995 16.4303 11.8872 16.3599C11.9922 16.2734 12.1317 16.1945 12.3237 16.1074C12.4372 16.0901 12.612 16.0637 12.8299 16.0296C13.2225 15.471 13.6237 14.9117 14.0336 14.3718C14.8016 13.332 15.7355 12.5997 16.8436 12.1733C17.1486 12.1373 17.5678 12.0667 18.0998 11.9628C18.5098 11.7967 19.1382 11.5877 19.9937 11.3523C20.011 11.3523 20.0803 11.326 20.2204 11.2734C20.3599 11.2208 20.4561 11.1945 20.5259 11.1945C20.6476 11.1945 20.7087 11.2734 20.7087 11.4312C20.7087 11.6832 20.5345 12.1733 20.1943 12.8876C18.798 15.8545 16.7035 18.3852 13.9034 20.4786C13.3096 20.9237 11.1107 22.2497 7.324 24.4665C3.52817 26.6826 1.09365 28.8123 0.0028616 30.8543C-0.0490545 31.3334 0.605219 31.9532 1.9837 32.712C3.35359 33.4712 4.44439 33.8551 5.26466 33.8724C5.7092 33.8724 5.85803 34.0909 5.72706 34.5365C5.31658 34.8063 4.79312 35.2775 4.16528 35.9405C4.09551 36.08 4.09551 36.4899 4.16528 37.1708C4.01715 37.3368 3.82513 37.546 3.60667 37.7813C3.7375 38.4189 4.00787 39.003 4.39191 39.5443C4.54877 39.5443 4.74176 39.5967 4.95911 39.7011C5.29982 40.2771 5.84016 41.0017 6.59121 41.8734C7.24563 42.0135 7.76853 42.0135 8.17902 41.8734Z" fill="var(--light-colour)"/></svg>',
    func: () => changeTheme('bladerunner')
  },
  {
    name: 'matrix',
    svg: '<svg width="43" height="36" viewBox="0 0 43 36" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M6.048 2.688C7.936 1.152 10 0.384001 12.24 0.384001C14.48 0.384001 16.528 1.152 18.384 2.688C20.272 4.224 21.76 6.32 22.848 8.976C23.936 11.632 24.48 14.544 24.48 17.712C24.48 20.88 23.936 23.792 22.848 26.448C21.76 29.104 20.272 31.2 18.384 32.736C16.528 34.272 14.48 35.04 12.24 35.04C10 35.04 7.936 34.272 6.048 32.736C4.192 31.2 2.72 29.104 1.632 26.448C0.544 23.792 0 20.88 0 17.712C0 14.544 0.544 11.632 1.632 8.976C2.72 6.32 4.192 4.224 6.048 2.688ZM6.48 5.088C5.232 7.84 4.608 12.048 4.608 17.712C4.608 23.376 5.232 27.584 6.48 30.336C7.76 33.088 9.68 34.464 12.24 34.464C14.8 34.464 16.704 33.088 17.952 30.336C19.232 27.584 19.872 23.376 19.872 17.712C19.872 12.048 19.232 7.84 17.952 5.088C16.704 2.336 14.8 0.960002 12.24 0.960002C9.68 0.960002 7.76 2.336 6.48 5.088Z" fill="var(--light-colour)"/><path d="M29.1394 33.84L34.0354 33.456V5.472H29.0914V5.136C31.1394 4.88 32.8194 4.352 34.1314 3.552C35.4434 2.72 36.5634 1.536 37.4914 0L37.7314 0.0960016V33.456L42.1474 33.84V34.272H29.1394V33.84Z" fill="var(--light-colour)"/></svg>',
    func: () => changeTheme('matrix')
  },
  {
    name: 'cyberpunk',
    svg: '<svg width="46" height="42" viewBox="0 0 46 42" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M32.0179 11.9476C29.455 14.5101 29.0134 18.3843 30.6845 21.4057L25.2903 26.799V15.579C28.6065 14.6235 31.0352 11.5714 31.0352 7.94614C31.0352 3.55675 27.4765 -0.00186216 23.0867 -0.00186216C18.6969 -0.00186216 15.1383 3.55675 15.1383 7.94614C15.1383 11.5714 17.5669 14.6235 20.8875 15.579V26.799L15.4933 21.4057C17.16 18.3843 16.7184 14.5101 14.1555 11.9476C11.0515 8.84359 6.02095 8.84359 2.9169 11.9476C-0.187144 15.0517 -0.187144 20.0844 2.9169 23.1884C5.4798 25.7509 9.35442 26.1921 12.3719 24.524L20.8875 33.0365V41.0469H25.2903V33.0365L33.8015 24.524C36.8233 26.1921 40.6979 25.7509 43.2608 23.1884C46.3649 20.0844 46.3649 15.0517 43.2608 11.9476C40.1568 8.84359 35.1219 8.84359 32.0179 11.9476Z" fill="var(--light-colour)"/></svg>',
    func: () => changeTheme('cyberpunk')
  },
  {
    name: 'synthwave',
    svg: '<svg width="80" height="77" viewBox="0 0 80 77" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M79.8025 44C79.7021 45.0116 79.5639 46.012 79.3896 47H0.610434C0.436054 46.012 0.297935 45.0116 0.197501 44H79.8025ZM2.15992 53C1.8222 52.0168 1.52172 51.0162 1.26017 50H78.7398C78.4783 51.0162 78.1778 52.0168 77.8401 53H2.15992ZM3.7818 57C4.26352 58.0245 4.78743 59.0253 5.35129 60H74.6487C75.2126 59.0253 75.7365 58.0245 76.2182 57H3.7818ZM11.4343 68C10.4985 67.0454 9.61017 66.0442 8.77314 65H71.2269C70.3898 66.0442 69.5015 67.0454 68.5657 68H11.4343ZM18.9183 74C20.7742 75.1532 22.7315 76.1587 24.7737 77H55.2263C57.2685 76.1587 59.2258 75.1532 61.0817 74H18.9183ZM79.9509 42C79.9835 41.3374 80 40.6707 80 40C80 17.9086 62.0914 0 40 0C17.9086 0 0 17.9086 0 40C0 40.6707 0.0165047 41.3374 0.04913 42H79.9509Z" fill="var(--light-colour)"/></svg>',
    func: () => changeTheme('synthwave')
  },
  {
    name: 'minecraft',
    svg: '<svg width="38" height="38" viewBox="0 0 38 38" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M25.7804 0.75H38V12.9696H25.7804V0.75ZM12.9698 12.9698H25.7807V19.4738H31.6934V38.0003H25.7807V31.6934H12.9698V38.0003H7.05703V19.4738L12.9698 19.4738V12.9698ZM12.9696 0.750145H0.75V12.9698H12.9696V0.750145Z" fill="var(--light-colour)"/></svg>',
    func: () => changeTheme('minecraft')
  },
];
function toggleSwitch() {
  darkModeSelected = !darkModeSelected;
  updateThemeColors();
  
  if (!darkModeSelected) {
      ico.style.right = "calc(100% - 50px)";
      ico.style.backgroundColor = themeSecondaryColour;
      ico.style.boxShadow = "none";
  } else {
      ico.style.right = "10px";
      ico.style.backgroundColor = themePrimaryColour;
      ico.style.boxShadow = `inset 12px -12px 0 0 ${themeSecondaryColour}`;
  }
  
  localStorage.setItem('darkModeSelected', darkModeSelected);
  localStorage.setItem('currentTheme', currentTheme);
}

function changeTheme(themeName) {
  currentTheme = themeName;
  updateThemeColors();
  localStorage.setItem('currentTheme', currentTheme);
  audio.src = `./audios/${themeName}.m4a`;
}

function updateThemeColors() {
  const mode = darkModeSelected ? 'dark' : 'light';
  themePrimaryColour = getComputedStyle(root).getPropertyValue(`--${currentTheme}-${mode}-primary`).trim();
  themeSecondaryColour = getComputedStyle(root).getPropertyValue(`--${currentTheme}-${mode}-secondary`).trim();
  
  root.style.setProperty('--light-colour', themeSecondaryColour);
  root.style.setProperty('--dark-colour', themePrimaryColour);
}
function loadPreferences() {
  const savedDarkMode = localStorage.getItem('darkModeSelected');
  const savedTheme = localStorage.getItem('currentTheme');
  
  // First, load the theme
  if (savedTheme) {
      currentTheme = savedTheme;
      audio.src = `./audios/${currentTheme}.m4a`;// audio select from saved
      const themeOption = options.find(opt => opt.name === savedTheme);
      if (themeOption) {
          currentMainIcon = themeOption;
          mainIcon.innerHTML = themeOption.svg;
      }
  }
  
  // Then, handle dark/light mode
  if (savedDarkMode !== null) {
      darkModeSelected = savedDarkMode === 'true';
  }
  
  // Update colors before applying visual states
  updateThemeColors();
  
  // Apply the correct visual state
  if (!darkModeSelected) {
      ico.style.right = "calc(100% - 50px)";
      ico.style.backgroundColor = themeSecondaryColour;
      ico.style.boxShadow = "none";
  } else {
      ico.style.right = "10px";
      ico.style.backgroundColor = themePrimaryColour;
      ico.style.boxShadow = `inset 12px -12px 0 0 ${themeSecondaryColour}`;
  }
  
  // Ensure the icon is visible
  ico.style.display = 'block'; // or whatever your default display value should be
}

// Theme selector logic
let currentMainIcon = options[0];
const mainIcon = document.querySelector('.main-icon');
const optionsCircle = document.querySelector('.options-circle');
let optionsActive = false;

function createOptionElement(option, index, total) {
  const optionElement = document.createElement('div');
  optionElement.className = 'option';
  optionElement.innerHTML = option.svg;
  
  const angle = (index * (360 / total)) * (Math.PI / 180);
  const radius = 65;
  const x = Math.cos(angle) * radius + 90;
  const y = Math.sin(angle) * radius + 90;
  
  optionElement.style.left = `${x}px`;
  optionElement.style.top = `${y}px`;
  
  optionElement.addEventListener('click', () => {
      selectOption(option);
  });
  
  return optionElement;
}

function selectOption(option) {// ico fix double toggle switch
  currentMainIcon = option;
  mainIcon.innerHTML = option.svg;
  option.func();
  updateOptions();
  toggleOptions();
  toggleSwitch();
  toggleSwitch();
  updateWallpaperState(false);
  playMusic();
  pauseMusic();
}

function updateOptions() {
  optionsCircle.innerHTML = '';
  const currentOptions = options.filter(opt => opt !== currentMainIcon);
  
  currentOptions.forEach((option, index) => {
      const optionElement = createOptionElement(option, index, currentOptions.length);
      optionsCircle.appendChild(optionElement);
  });
}

function toggleOptions() {
  optionsActive = !optionsActive;
  optionsCircle.classList.toggle('active', optionsActive);
}

// Event Listeners
mainIcon.addEventListener('click', toggleOptions);

document.addEventListener('click', (event) => {
  const isClickInside = mainIcon.contains(event.target) || optionsCircle.contains(event.target);
  if (!isClickInside && optionsActive) {
      toggleOptions();
  }
});

// Initialize
window.addEventListener('load', () => {
  loadPreferences();
  updateOptions();
  mainIcon.innerHTML = currentMainIcon.svg;
});